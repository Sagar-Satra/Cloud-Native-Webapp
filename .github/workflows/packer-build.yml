name: Packer Build

on:
  pull_request:
    branches:
      - main

jobs:
  packer-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up Packer
        uses: hashicorp/setup-packer@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.SERVICE_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SERVICE_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
      
      - name: 'google cloud authentication'
        uses: google-github-actions/auth@v2
        with:
            credentials_json: ${{ secrets.GCP_CREDENTIAL }}
  
      - name: 'Set up GCP SDK'
        uses: google-github-actions/setup-gcloud@v2
        
      - name: 'Set up and use GCP CLI'
        run: 'gcloud info'

      # - name: Create /tmp/webapp Directory
      #   run: mkdir -p /tmp/webapp
  
      # - name: Copy Files to /tmp/webapp
      #   run: cp -r $GITHUB_WORKSPACE/* /tmp/webapp/
  
      # - name: List /tmp/webapp Contents
      #   run: ls -lah /tmp/webapp

      - name: Initialize Packer (Install required plugins)
        run: packer init ./packer

      - name: Run Packer Build for AWS
        env:
          AMI_Name: ${{ vars.AMI_NAME }}
          Instance_Type: ${{ vars.INSTANCE_TYPE }}
          AWS_Region: ${{ vars.AWS_REGION }}
          Ubuntu_AMI_Image: ${{ vars.UBUNTU_AMI_IMAGE }}
          SSH_User_Name: ${{ vars.UBUNTU_USER_NAME }}
          MySQL_UserName: ${{ secrets.DB_USERNAME }}
          MySQL_Password: ${{ secrets.DB_PASSWORD }}
          DB_Name: ${{ vars.DB_NAME }}
          Port: ${{ vars.PORT }}
          Host: ${{ vars.HOST }}
          google_project_id: ${{ vars.GCP_PROJECT_ID }}
          google_demo_project_id: ${{ vars.DEMO_GCP_PROJECT_ID }} 
    

        run: |
          export PACKER_LOG=1
          packer build \
            -var "ami_name1=${{ env.AMI_Name}}" \
            -var "instance_type1=${{ env.Instance_Type }}" \
            -var "aws_region1=${{ env.AWS_Region }}" \
            -var "ubuntu_ami_image1=${{ env.Ubuntu_AMI_Image }}" \
            -var "ssh_username1=${{ env.SSH_User_Name }}" \
            -var "mysql_user=${{ env.MySQL_UserName }}" \
            -var "mysql_password=${{ env.MySQL_Password }}" \
            -var "mysql_host=${{ env.Host }}" \
            -var "db_name=${{ env.DB_Name }}" \
            -var "app_port=${{ env.Port }}" \
            -var "gcp_project_id=${{ env.google_project_id }}" \
            ./packer/aws-ubuntu.pkr.hcl
        
      - name: Get Latest Image Name
        id: get-image
        run: |
          IMAGE_NAME=$(gcloud compute images list \
            --project=${{ vars.GCP_PROJECT_ID }} \
            --sort-by=~creationTimestamp \
            --limit=1 \
            --format="value(NAME)")
          echo "Latest image found: $IMAGE_NAME"
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      - name: Copy GCP Image to Another Project
        env:
          SOURCE_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
          DESTINATION_PROJECT_ID: ${{ vars.DEMO_GCP_PROJECT_ID }}
        run: |
          echo "Copying image from $SOURCE_PROJECT_ID to $DESTINATION_PROJECT_ID..."
          gcloud compute images create "webapp-$(date +%s)" \
            --source-image="$IMAGE_NAME" \
            --source-image-project="$SOURCE_PROJECT_ID" \
            --project="$DESTINATION_PROJECT_ID" \
            --description="Copied from $SOURCE_PROJECT_ID on $(date)"
